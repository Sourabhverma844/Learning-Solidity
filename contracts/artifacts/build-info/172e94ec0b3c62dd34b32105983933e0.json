{
	"id": "172e94ec0b3c62dd34b32105983933e0",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.29",
	"solcLongVersion": "0.8.29+commit.ab55807c",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/ALU8.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\ncontract Contract {\r\n    address owner;\r\n\r\n    constructor() payable{\r\n        owner = msg.sender;\r\n        require(msg.value >= 1 ether, \"Not enough ether sent\");\r\n    }\r\n\r\n    function withdraw() public{\r\n        require(msg.sender == owner);\r\n        payable(msg.sender).call{value : address(this).balance}(\"\");\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"contracts/ALU8.sol": {
				"Contract": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "payable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/ALU8.sol\":61:385  contract Contract {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/ALU8.sol\":148:158  msg.sender */\n  caller\n    /* \"contracts/ALU8.sol\":140:145  owner */\n  0x00\n  0x00\n    /* \"contracts/ALU8.sol\":140:158  owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/ALU8.sol\":190:197  1 ether */\n  0x0de0b6b3a7640000\n    /* \"contracts/ALU8.sol\":177:186  msg.value */\n  callvalue\n    /* \"contracts/ALU8.sol\":177:197  msg.value >= 1 ether */\n  lt\n  iszero\n    /* \"contracts/ALU8.sol\":169:223  require(msg.value >= 1 ether, \"Not enough ether sent\") */\n  tag_3\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_4\n  swap1\n  tag_5\n  jump\t// in\ntag_4:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_3:\n    /* \"contracts/ALU8.sol\":61:385  contract Contract {... */\n  jump(tag_6)\n    /* \"#utility.yul\":7:176   */\ntag_7:\n    /* \"#utility.yul\":91:102   */\n  0x00\n    /* \"#utility.yul\":125:131   */\n  dup3\n    /* \"#utility.yul\":120:123   */\n  dup3\n    /* \"#utility.yul\":113:132   */\n  mstore\n    /* \"#utility.yul\":165:169   */\n  0x20\n    /* \"#utility.yul\":160:163   */\n  dup3\n    /* \"#utility.yul\":156:170   */\n  add\n    /* \"#utility.yul\":141:170   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:176   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":182:353   */\ntag_8:\n    /* \"#utility.yul\":322:345   */\n  0x4e6f7420656e6f7567682065746865722073656e740000000000000000000000\n    /* \"#utility.yul\":318:319   */\n  0x00\n    /* \"#utility.yul\":310:316   */\n  dup3\n    /* \"#utility.yul\":306:320   */\n  add\n    /* \"#utility.yul\":299:346   */\n  mstore\n    /* \"#utility.yul\":182:353   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":359:725   */\ntag_9:\n    /* \"#utility.yul\":501:504   */\n  0x00\n    /* \"#utility.yul\":522:589   */\n  tag_14\n    /* \"#utility.yul\":586:588   */\n  0x15\n    /* \"#utility.yul\":581:584   */\n  dup4\n    /* \"#utility.yul\":522:589   */\n  tag_7\n  jump\t// in\ntag_14:\n    /* \"#utility.yul\":515:589   */\n  swap2\n  pop\n    /* \"#utility.yul\":598:691   */\n  tag_15\n    /* \"#utility.yul\":687:690   */\n  dup3\n    /* \"#utility.yul\":598:691   */\n  tag_8\n  jump\t// in\ntag_15:\n    /* \"#utility.yul\":716:718   */\n  0x20\n    /* \"#utility.yul\":711:714   */\n  dup3\n    /* \"#utility.yul\":707:719   */\n  add\n    /* \"#utility.yul\":700:719   */\n  swap1\n  pop\n    /* \"#utility.yul\":359:725   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":731:1150   */\ntag_5:\n    /* \"#utility.yul\":897:901   */\n  0x00\n    /* \"#utility.yul\":935:937   */\n  0x20\n    /* \"#utility.yul\":924:933   */\n  dup3\n    /* \"#utility.yul\":920:938   */\n  add\n    /* \"#utility.yul\":912:938   */\n  swap1\n  pop\n    /* \"#utility.yul\":984:993   */\n  dup2\n    /* \"#utility.yul\":978:982   */\n  dup2\n    /* \"#utility.yul\":974:994   */\n  sub\n    /* \"#utility.yul\":970:971   */\n  0x00\n    /* \"#utility.yul\":959:968   */\n  dup4\n    /* \"#utility.yul\":955:972   */\n  add\n    /* \"#utility.yul\":948:995   */\n  mstore\n    /* \"#utility.yul\":1012:1143   */\n  tag_17\n    /* \"#utility.yul\":1138:1142   */\n  dup2\n    /* \"#utility.yul\":1012:1143   */\n  tag_9\n  jump\t// in\ntag_17:\n    /* \"#utility.yul\":1004:1143   */\n  swap1\n  pop\n    /* \"#utility.yul\":731:1150   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"contracts/ALU8.sol\":61:385  contract Contract {... */\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/ALU8.sol\":61:385  contract Contract {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x3ccfd60b\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"contracts/ALU8.sol\":239:382  function withdraw() public{... */\n    tag_3:\n      tag_4\n      tag_5\n      jump\t// in\n    tag_4:\n      stop\n    tag_5:\n        /* \"contracts/ALU8.sol\":298:303  owner */\n      0x00\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ALU8.sol\":284:303  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ALU8.sol\":284:294  msg.sender */\n      caller\n        /* \"contracts/ALU8.sol\":284:303  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/ALU8.sol\":276:304  require(msg.sender == owner) */\n      tag_7\n      jumpi\n      revert(0x00, 0x00)\n    tag_7:\n        /* \"contracts/ALU8.sol\":323:333  msg.sender */\n      caller\n        /* \"contracts/ALU8.sol\":315:339  payable(msg.sender).call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ALU8.sol\":348:369  address(this).balance */\n      selfbalance\n        /* \"contracts/ALU8.sol\":315:374  payable(msg.sender).call{value : address(this).balance}(\"\") */\n      mload(0x40)\n      tag_8\n      swap1\n      tag_9\n      jump\t// in\n    tag_8:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_12\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_11)\n    tag_12:\n      0x60\n      swap2\n      pop\n    tag_11:\n      pop\n      pop\n      pop\n        /* \"contracts/ALU8.sol\":239:382  function withdraw() public{... */\n      jump\t// out\n        /* \"#utility.yul\":7:154   */\n    tag_13:\n        /* \"#utility.yul\":108:119   */\n      0x00\n        /* \"#utility.yul\":145:148   */\n      dup2\n        /* \"#utility.yul\":130:148   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:154   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":160:274   */\n    tag_14:\n      pop\n      jump\t// out\n        /* \"#utility.yul\":280:678   */\n    tag_15:\n        /* \"#utility.yul\":439:442   */\n      0x00\n        /* \"#utility.yul\":460:543   */\n      tag_20\n        /* \"#utility.yul\":541:542   */\n      0x00\n        /* \"#utility.yul\":536:539   */\n      dup4\n        /* \"#utility.yul\":460:543   */\n      tag_13\n      jump\t// in\n    tag_20:\n        /* \"#utility.yul\":453:543   */\n      swap2\n      pop\n        /* \"#utility.yul\":552:645   */\n      tag_21\n        /* \"#utility.yul\":641:644   */\n      dup3\n        /* \"#utility.yul\":552:645   */\n      tag_14\n      jump\t// in\n    tag_21:\n        /* \"#utility.yul\":670:671   */\n      0x00\n        /* \"#utility.yul\":665:668   */\n      dup3\n        /* \"#utility.yul\":661:672   */\n      add\n        /* \"#utility.yul\":654:672   */\n      swap1\n      pop\n        /* \"#utility.yul\":280:678   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":684:1063   */\n    tag_9:\n        /* \"#utility.yul\":868:871   */\n      0x00\n        /* \"#utility.yul\":890:1037   */\n      tag_23\n        /* \"#utility.yul\":1033:1036   */\n      dup3\n        /* \"#utility.yul\":890:1037   */\n      tag_15\n      jump\t// in\n    tag_23:\n        /* \"#utility.yul\":883:1037   */\n      swap2\n      pop\n        /* \"#utility.yul\":1054:1057   */\n      dup2\n        /* \"#utility.yul\":1047:1057   */\n      swap1\n      pop\n        /* \"#utility.yul\":684:1063   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220c73b70fa38f5fe4090656fe01848bc5b6dd0ccd82ee20f5652e72ad9e8a9d50a64736f6c634300081d0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_20": {
									"entryPoint": null,
									"id": 20,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_d280afc80784682a38fab6730119fac14e7f3a3226cebf671391822a4d8e6190_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 203,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d280afc80784682a38fab6730119fac14e7f3a3226cebf671391822a4d8e6190__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 237,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 147,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"store_literal_in_memory_d280afc80784682a38fab6730119fac14e7f3a3226cebf671391822a4d8e6190": {
									"entryPoint": 163,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1153:1",
										"nodeType": "YulBlock",
										"src": "0:1153:1",
										"statements": [
											{
												"body": {
													"nativeSrc": "103:73:1",
													"nodeType": "YulBlock",
													"src": "103:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "120:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "120:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "125:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "125:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "113:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "113:6:1"
																},
																"nativeSrc": "113:19:1",
																"nodeType": "YulFunctionCall",
																"src": "113:19:1"
															},
															"nativeSrc": "113:19:1",
															"nodeType": "YulExpressionStatement",
															"src": "113:19:1"
														},
														{
															"nativeSrc": "141:29:1",
															"nodeType": "YulAssignment",
															"src": "141:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "160:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "160:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "165:4:1",
																		"nodeType": "YulLiteral",
																		"src": "165:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "156:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "156:3:1"
																},
																"nativeSrc": "156:14:1",
																"nodeType": "YulFunctionCall",
																"src": "156:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "141:11:1",
																	"nodeType": "YulIdentifier",
																	"src": "141:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "7:169:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "75:3:1",
														"nodeType": "YulTypedName",
														"src": "75:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "80:6:1",
														"nodeType": "YulTypedName",
														"src": "80:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "91:11:1",
														"nodeType": "YulTypedName",
														"src": "91:11:1",
														"type": ""
													}
												],
												"src": "7:169:1"
											},
											{
												"body": {
													"nativeSrc": "288:65:1",
													"nodeType": "YulBlock",
													"src": "288:65:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "310:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "310:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "318:1:1",
																				"nodeType": "YulLiteral",
																				"src": "318:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "306:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "306:3:1"
																		},
																		"nativeSrc": "306:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "306:14:1"
																	},
																	{
																		"hexValue": "4e6f7420656e6f7567682065746865722073656e74",
																		"kind": "string",
																		"nativeSrc": "322:23:1",
																		"nodeType": "YulLiteral",
																		"src": "322:23:1",
																		"type": "",
																		"value": "Not enough ether sent"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "299:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "299:6:1"
																},
																"nativeSrc": "299:47:1",
																"nodeType": "YulFunctionCall",
																"src": "299:47:1"
															},
															"nativeSrc": "299:47:1",
															"nodeType": "YulExpressionStatement",
															"src": "299:47:1"
														}
													]
												},
												"name": "store_literal_in_memory_d280afc80784682a38fab6730119fac14e7f3a3226cebf671391822a4d8e6190",
												"nativeSrc": "182:171:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "280:6:1",
														"nodeType": "YulTypedName",
														"src": "280:6:1",
														"type": ""
													}
												],
												"src": "182:171:1"
											},
											{
												"body": {
													"nativeSrc": "505:220:1",
													"nodeType": "YulBlock",
													"src": "505:220:1",
													"statements": [
														{
															"nativeSrc": "515:74:1",
															"nodeType": "YulAssignment",
															"src": "515:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "581:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "581:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "586:2:1",
																		"nodeType": "YulLiteral",
																		"src": "586:2:1",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "522:58:1",
																	"nodeType": "YulIdentifier",
																	"src": "522:58:1"
																},
																"nativeSrc": "522:67:1",
																"nodeType": "YulFunctionCall",
																"src": "522:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "515:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "515:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "687:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "687:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d280afc80784682a38fab6730119fac14e7f3a3226cebf671391822a4d8e6190",
																	"nativeSrc": "598:88:1",
																	"nodeType": "YulIdentifier",
																	"src": "598:88:1"
																},
																"nativeSrc": "598:93:1",
																"nodeType": "YulFunctionCall",
																"src": "598:93:1"
															},
															"nativeSrc": "598:93:1",
															"nodeType": "YulExpressionStatement",
															"src": "598:93:1"
														},
														{
															"nativeSrc": "700:19:1",
															"nodeType": "YulAssignment",
															"src": "700:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "711:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "711:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "716:2:1",
																		"nodeType": "YulLiteral",
																		"src": "716:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "707:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "707:3:1"
																},
																"nativeSrc": "707:12:1",
																"nodeType": "YulFunctionCall",
																"src": "707:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "700:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "700:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d280afc80784682a38fab6730119fac14e7f3a3226cebf671391822a4d8e6190_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "359:366:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "493:3:1",
														"nodeType": "YulTypedName",
														"src": "493:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "501:3:1",
														"nodeType": "YulTypedName",
														"src": "501:3:1",
														"type": ""
													}
												],
												"src": "359:366:1"
											},
											{
												"body": {
													"nativeSrc": "902:248:1",
													"nodeType": "YulBlock",
													"src": "902:248:1",
													"statements": [
														{
															"nativeSrc": "912:26:1",
															"nodeType": "YulAssignment",
															"src": "912:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "924:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "924:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "935:2:1",
																		"nodeType": "YulLiteral",
																		"src": "935:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "920:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "920:3:1"
																},
																"nativeSrc": "920:18:1",
																"nodeType": "YulFunctionCall",
																"src": "920:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "912:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "912:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "959:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "959:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "970:1:1",
																				"nodeType": "YulLiteral",
																				"src": "970:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "955:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "955:3:1"
																		},
																		"nativeSrc": "955:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "955:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "978:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "978:4:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "984:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "984:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "974:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "974:3:1"
																		},
																		"nativeSrc": "974:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "974:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "948:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "948:6:1"
																},
																"nativeSrc": "948:47:1",
																"nodeType": "YulFunctionCall",
																"src": "948:47:1"
															},
															"nativeSrc": "948:47:1",
															"nodeType": "YulExpressionStatement",
															"src": "948:47:1"
														},
														{
															"nativeSrc": "1004:139:1",
															"nodeType": "YulAssignment",
															"src": "1004:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "1138:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "1138:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d280afc80784682a38fab6730119fac14e7f3a3226cebf671391822a4d8e6190_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1012:124:1",
																	"nodeType": "YulIdentifier",
																	"src": "1012:124:1"
																},
																"nativeSrc": "1012:131:1",
																"nodeType": "YulFunctionCall",
																"src": "1012:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1004:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1004:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d280afc80784682a38fab6730119fac14e7f3a3226cebf671391822a4d8e6190__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "731:419:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "882:9:1",
														"nodeType": "YulTypedName",
														"src": "882:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "897:4:1",
														"nodeType": "YulTypedName",
														"src": "897:4:1",
														"type": ""
													}
												],
												"src": "731:419:1"
											}
										]
									},
									"contents": "{\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_d280afc80784682a38fab6730119fac14e7f3a3226cebf671391822a4d8e6190(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not enough ether sent\")\n\n    }\n\n    function abi_encode_t_stringliteral_d280afc80784682a38fab6730119fac14e7f3a3226cebf671391822a4d8e6190_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_d280afc80784682a38fab6730119fac14e7f3a3226cebf671391822a4d8e6190(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d280afc80784682a38fab6730119fac14e7f3a3226cebf671391822a4d8e6190__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d280afc80784682a38fab6730119fac14e7f3a3226cebf671391822a4d8e6190_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "6080604052335f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550670de0b6b3a764000034101561008e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610085906100ed565b60405180910390fd5b61010b565b5f82825260208201905092915050565b7f4e6f7420656e6f7567682065746865722073656e7400000000000000000000005f82015250565b5f6100d7601583610093565b91506100e2826100a3565b602082019050919050565b5f6020820190508181035f830152610104816100cb565b9050919050565b61016d806101185f395ff3fe608060405234801561000f575f5ffd5b5060043610610029575f3560e01c80633ccfd60b1461002d575b5f5ffd5b610035610037565b005b5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461008e575f5ffd5b3373ffffffffffffffffffffffffffffffffffffffff16476040516100b290610123565b5f6040518083038185875af1925050503d805f81146100ec576040519150601f19603f3d011682016040523d82523d5f602084013e6100f1565b606091505b505050565b5f81905092915050565b50565b5f61010e5f836100f6565b915061011982610100565b5f82019050919050565b5f61012d82610103565b915081905091905056fea2646970667358221220c73b70fa38f5fe4090656fe01848bc5b6dd0ccd82ee20f5652e72ad9e8a9d50a64736f6c634300081d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLER PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH8 0xDE0B6B3A7640000 CALLVALUE LT ISZERO PUSH2 0x8E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x85 SWAP1 PUSH2 0xED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x10B JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F7420656E6F7567682065746865722073656E740000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xD7 PUSH1 0x15 DUP4 PUSH2 0x93 JUMP JUMPDEST SWAP2 POP PUSH2 0xE2 DUP3 PUSH2 0xA3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x104 DUP2 PUSH2 0xCB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16D DUP1 PUSH2 0x118 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x29 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x2D JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x35 PUSH2 0x37 JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x8E JUMPI PUSH0 PUSH0 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SELFBALANCE PUSH1 0x40 MLOAD PUSH2 0xB2 SWAP1 PUSH2 0x123 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0xEC JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xF1 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x10E PUSH0 DUP4 PUSH2 0xF6 JUMP JUMPDEST SWAP2 POP PUSH2 0x119 DUP3 PUSH2 0x100 JUMP JUMPDEST PUSH0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x12D DUP3 PUSH2 0x103 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC7 EXTCODESIZE PUSH17 0xFA38F5FE4090656FE01848BC5B6DD0CCD8 0x2E 0xE2 0xF JUMP MSTORE SWAPN 0x2A 0xD9 0xE8 0xA9 0xD5 EXP PUSH5 0x736F6C6343 STOP ADDMOD SAR STOP CALLER ",
							"sourceMap": "61:324:0:-:0;;;148:10;140:5;;:18;;;;;;;;;;;;;;;;;;190:7;177:9;:20;;169:54;;;;;;;;;;;;:::i;:::-;;;;;;;;;61:324;;7:169:1;91:11;125:6;120:3;113:19;165:4;160:3;156:14;141:29;;7:169;;;;:::o;182:171::-;322:23;318:1;310:6;306:14;299:47;182:171;:::o;359:366::-;501:3;522:67;586:2;581:3;522:67;:::i;:::-;515:74;;598:93;687:3;598:93;:::i;:::-;716:2;711:3;707:12;700:19;;359:366;;;:::o;731:419::-;897:4;935:2;924:9;920:18;912:26;;984:9;978:4;974:20;970:1;959:9;955:17;948:47;1012:131;1138:4;1012:131;:::i;:::-;1004:139;;731:419;;;:::o;61:324:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@withdraw_46": {
									"entryPoint": 55,
									"id": 46,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 259,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 291,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 246,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470": {
									"entryPoint": 256,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1066:1",
										"nodeType": "YulBlock",
										"src": "0:1066:1",
										"statements": [
											{
												"body": {
													"nativeSrc": "120:34:1",
													"nodeType": "YulBlock",
													"src": "120:34:1",
													"statements": [
														{
															"nativeSrc": "130:18:1",
															"nodeType": "YulAssignment",
															"src": "130:18:1",
															"value": {
																"name": "pos",
																"nativeSrc": "145:3:1",
																"nodeType": "YulIdentifier",
																"src": "145:3:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "130:11:1",
																	"nodeType": "YulIdentifier",
																	"src": "130:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "7:147:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "92:3:1",
														"nodeType": "YulTypedName",
														"src": "92:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "97:6:1",
														"nodeType": "YulTypedName",
														"src": "97:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "108:11:1",
														"nodeType": "YulTypedName",
														"src": "108:11:1",
														"type": ""
													}
												],
												"src": "7:147:1"
											},
											{
												"body": {
													"nativeSrc": "266:8:1",
													"nodeType": "YulBlock",
													"src": "266:8:1",
													"statements": []
												},
												"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
												"nativeSrc": "160:114:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "258:6:1",
														"nodeType": "YulTypedName",
														"src": "258:6:1",
														"type": ""
													}
												],
												"src": "160:114:1"
											},
											{
												"body": {
													"nativeSrc": "443:235:1",
													"nodeType": "YulBlock",
													"src": "443:235:1",
													"statements": [
														{
															"nativeSrc": "453:90:1",
															"nodeType": "YulAssignment",
															"src": "453:90:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "536:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "536:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "541:1:1",
																		"nodeType": "YulLiteral",
																		"src": "541:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "460:75:1",
																	"nodeType": "YulIdentifier",
																	"src": "460:75:1"
																},
																"nativeSrc": "460:83:1",
																"nodeType": "YulFunctionCall",
																"src": "460:83:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "453:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "453:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "641:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "641:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"nativeSrc": "552:88:1",
																	"nodeType": "YulIdentifier",
																	"src": "552:88:1"
																},
																"nativeSrc": "552:93:1",
																"nodeType": "YulFunctionCall",
																"src": "552:93:1"
															},
															"nativeSrc": "552:93:1",
															"nodeType": "YulExpressionStatement",
															"src": "552:93:1"
														},
														{
															"nativeSrc": "654:18:1",
															"nodeType": "YulAssignment",
															"src": "654:18:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "665:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "665:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "670:1:1",
																		"nodeType": "YulLiteral",
																		"src": "670:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "661:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "661:3:1"
																},
																"nativeSrc": "661:11:1",
																"nodeType": "YulFunctionCall",
																"src": "661:11:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "654:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "654:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "280:398:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "431:3:1",
														"nodeType": "YulTypedName",
														"src": "431:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "439:3:1",
														"nodeType": "YulTypedName",
														"src": "439:3:1",
														"type": ""
													}
												],
												"src": "280:398:1"
											},
											{
												"body": {
													"nativeSrc": "872:191:1",
													"nodeType": "YulBlock",
													"src": "872:191:1",
													"statements": [
														{
															"nativeSrc": "883:154:1",
															"nodeType": "YulAssignment",
															"src": "883:154:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1033:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1033:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "890:141:1",
																	"nodeType": "YulIdentifier",
																	"src": "890:141:1"
																},
																"nativeSrc": "890:147:1",
																"nodeType": "YulFunctionCall",
																"src": "890:147:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "883:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "883:3:1"
																}
															]
														},
														{
															"nativeSrc": "1047:10:1",
															"nodeType": "YulAssignment",
															"src": "1047:10:1",
															"value": {
																"name": "pos",
																"nativeSrc": "1054:3:1",
																"nodeType": "YulIdentifier",
																"src": "1054:3:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "1047:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1047:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "684:379:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "859:3:1",
														"nodeType": "YulTypedName",
														"src": "859:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "868:3:1",
														"nodeType": "YulTypedName",
														"src": "868:3:1",
														"type": ""
													}
												],
												"src": "684:379:1"
											}
										]
									},
									"contents": "{\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b5060043610610029575f3560e01c80633ccfd60b1461002d575b5f5ffd5b610035610037565b005b5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461008e575f5ffd5b3373ffffffffffffffffffffffffffffffffffffffff16476040516100b290610123565b5f6040518083038185875af1925050503d805f81146100ec576040519150601f19603f3d011682016040523d82523d5f602084013e6100f1565b606091505b505050565b5f81905092915050565b50565b5f61010e5f836100f6565b915061011982610100565b5f82019050919050565b5f61012d82610103565b915081905091905056fea2646970667358221220c73b70fa38f5fe4090656fe01848bc5b6dd0ccd82ee20f5652e72ad9e8a9d50a64736f6c634300081d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x29 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x2D JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x35 PUSH2 0x37 JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x8E JUMPI PUSH0 PUSH0 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SELFBALANCE PUSH1 0x40 MLOAD PUSH2 0xB2 SWAP1 PUSH2 0x123 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0xEC JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xF1 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x10E PUSH0 DUP4 PUSH2 0xF6 JUMP JUMPDEST SWAP2 POP PUSH2 0x119 DUP3 PUSH2 0x100 JUMP JUMPDEST PUSH0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x12D DUP3 PUSH2 0x103 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC7 EXTCODESIZE PUSH17 0xFA38F5FE4090656FE01848BC5B6DD0CCD8 0x2E 0xE2 0xF JUMP MSTORE SWAPN 0x2A 0xD9 0xE8 0xA9 0xD5 EXP PUSH5 0x736F6C6343 STOP ADDMOD SAR STOP CALLER ",
							"sourceMap": "61:324:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;239:143;;;:::i;:::-;;;298:5;;;;;;;;;;;284:19;;:10;:19;;;276:28;;;;;;323:10;315:24;;348:21;315:59;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;239:143::o;7:147:1:-;108:11;145:3;130:18;;7:147;;;;:::o;160:114::-;;:::o;280:398::-;439:3;460:83;541:1;536:3;460:83;:::i;:::-;453:90;;552:93;641:3;552:93;:::i;:::-;670:1;665:3;661:11;654:18;;280:398;;;:::o;684:379::-;868:3;890:147;1033:3;890:147;:::i;:::-;883:154;;1054:3;1047:10;;684:379;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "73000",
								"executionCost": "24600",
								"totalCost": "97600"
							},
							"external": {
								"withdraw()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 61,
									"end": 385,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 61,
									"end": 385,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 61,
									"end": 385,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 148,
									"end": 158,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 140,
									"end": 145,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 140,
									"end": 145,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 140,
									"end": 158,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 140,
									"end": 158,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 140,
									"end": 158,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 140,
									"end": 158,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 140,
									"end": 158,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 140,
									"end": 158,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 140,
									"end": 158,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 140,
									"end": 158,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 140,
									"end": 158,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 140,
									"end": 158,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 140,
									"end": 158,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 140,
									"end": 158,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 140,
									"end": 158,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 140,
									"end": 158,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 140,
									"end": 158,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 140,
									"end": 158,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 140,
									"end": 158,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 140,
									"end": 158,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 190,
									"end": 197,
									"name": "PUSH",
									"source": 0,
									"value": "DE0B6B3A7640000"
								},
								{
									"begin": 177,
									"end": 186,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 177,
									"end": 197,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 177,
									"end": 197,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 169,
									"end": 223,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 169,
									"end": 223,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 169,
									"end": 223,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 169,
									"end": 223,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 169,
									"end": 223,
									"name": "PUSH",
									"source": 0,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 169,
									"end": 223,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 169,
									"end": 223,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 169,
									"end": 223,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 169,
									"end": 223,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 169,
									"end": 223,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 169,
									"end": 223,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 169,
									"end": 223,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 169,
									"end": 223,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 169,
									"end": 223,
									"name": "tag",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 169,
									"end": 223,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 169,
									"end": 223,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 169,
									"end": 223,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 169,
									"end": 223,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 169,
									"end": 223,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 169,
									"end": 223,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 169,
									"end": 223,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 169,
									"end": 223,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 169,
									"end": 223,
									"name": "tag",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 169,
									"end": 223,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 61,
									"end": 385,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 61,
									"end": 385,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7,
									"end": 176,
									"name": "tag",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 7,
									"end": 176,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 91,
									"end": 102,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 125,
									"end": 131,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 120,
									"end": 123,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 113,
									"end": 132,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 165,
									"end": 169,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 160,
									"end": 163,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 156,
									"end": 170,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 141,
									"end": 170,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 141,
									"end": 170,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7,
									"end": 176,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 7,
									"end": 176,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7,
									"end": 176,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7,
									"end": 176,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7,
									"end": 176,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 182,
									"end": 353,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 182,
									"end": 353,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 322,
									"end": 345,
									"name": "PUSH",
									"source": 1,
									"value": "4E6F7420656E6F7567682065746865722073656E740000000000000000000000"
								},
								{
									"begin": 318,
									"end": 319,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 310,
									"end": 316,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 306,
									"end": 320,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 299,
									"end": 346,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 182,
									"end": 353,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 182,
									"end": 353,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 359,
									"end": 725,
									"name": "tag",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 359,
									"end": 725,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 501,
									"end": 504,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 522,
									"end": 589,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 586,
									"end": 588,
									"name": "PUSH",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 581,
									"end": 584,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 522,
									"end": 589,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 522,
									"end": 589,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 522,
									"end": 589,
									"name": "tag",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 522,
									"end": 589,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 515,
									"end": 589,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 515,
									"end": 589,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 598,
									"end": 691,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 687,
									"end": 690,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 598,
									"end": 691,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 598,
									"end": 691,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 598,
									"end": 691,
									"name": "tag",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 598,
									"end": 691,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 716,
									"end": 718,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 711,
									"end": 714,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 707,
									"end": 719,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 700,
									"end": 719,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 700,
									"end": 719,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 359,
									"end": 725,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 359,
									"end": 725,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 359,
									"end": 725,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 359,
									"end": 725,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 731,
									"end": 1150,
									"name": "tag",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 731,
									"end": 1150,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 897,
									"end": 901,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 935,
									"end": 937,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 924,
									"end": 933,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 920,
									"end": 938,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 912,
									"end": 938,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 912,
									"end": 938,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 984,
									"end": 993,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 978,
									"end": 982,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 974,
									"end": 994,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 970,
									"end": 971,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 959,
									"end": 968,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 955,
									"end": 972,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 948,
									"end": 995,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1012,
									"end": 1143,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 1138,
									"end": 1142,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1012,
									"end": 1143,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 1012,
									"end": 1143,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1012,
									"end": 1143,
									"name": "tag",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 1012,
									"end": 1143,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1004,
									"end": 1143,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1004,
									"end": 1143,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 731,
									"end": 1150,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 731,
									"end": 1150,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 731,
									"end": 1150,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 731,
									"end": 1150,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 61,
									"end": 385,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 61,
									"end": 385,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 61,
									"end": 385,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 61,
									"end": 385,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 61,
									"end": 385,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 61,
									"end": 385,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 61,
									"end": 385,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 61,
									"end": 385,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 61,
									"end": 385,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c73b70fa38f5fe4090656fe01848bc5b6dd0ccd82ee20f5652e72ad9e8a9d50a64736f6c634300081d0033",
									".code": [
										{
											"begin": 61,
											"end": 385,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 61,
											"end": 385,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 61,
											"end": 385,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 385,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 385,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 385,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 61,
											"end": 385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 61,
											"end": 385,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 385,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 385,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 385,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 61,
											"end": 385,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 61,
											"end": 385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 385,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 61,
											"end": 385,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 61,
											"end": 385,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 385,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 61,
											"end": 385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 61,
											"end": 385,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 385,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 385,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 385,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 61,
											"end": 385,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 61,
											"end": 385,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 385,
											"name": "PUSH",
											"source": 0,
											"value": "3CCFD60B"
										},
										{
											"begin": 61,
											"end": 385,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 61,
											"end": 385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 61,
											"end": 385,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 385,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 61,
											"end": 385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 385,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 385,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 385,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 239,
											"end": 382,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 239,
											"end": 382,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 239,
											"end": 382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 239,
											"end": 382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 239,
											"end": 382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 239,
											"end": 382,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 239,
											"end": 382,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 239,
											"end": 382,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 239,
											"end": 382,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 239,
											"end": 382,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 298,
											"end": 303,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 298,
											"end": 303,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 298,
											"end": 303,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 298,
											"end": 303,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 298,
											"end": 303,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 298,
											"end": 303,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 298,
											"end": 303,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 298,
											"end": 303,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 298,
											"end": 303,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 298,
											"end": 303,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 298,
											"end": 303,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 284,
											"end": 303,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 284,
											"end": 303,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 284,
											"end": 294,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 284,
											"end": 303,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 284,
											"end": 303,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 284,
											"end": 303,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 276,
											"end": 304,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 276,
											"end": 304,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 276,
											"end": 304,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 276,
											"end": 304,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 276,
											"end": 304,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 276,
											"end": 304,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 276,
											"end": 304,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 323,
											"end": 333,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 315,
											"end": 339,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 315,
											"end": 339,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 348,
											"end": 369,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 315,
											"end": 374,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 315,
											"end": 374,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 315,
											"end": 374,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 315,
											"end": 374,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 315,
											"end": 374,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 315,
											"end": 374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 315,
											"end": 374,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 315,
											"end": 374,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 315,
											"end": 374,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 315,
											"end": 374,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 315,
											"end": 374,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 315,
											"end": 374,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 315,
											"end": 374,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 315,
											"end": 374,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 315,
											"end": 374,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 315,
											"end": 374,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 315,
											"end": 374,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 315,
											"end": 374,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 315,
											"end": 374,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 315,
											"end": 374,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 315,
											"end": 374,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 315,
											"end": 374,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 315,
											"end": 374,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 315,
											"end": 374,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 315,
											"end": 374,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 315,
											"end": 374,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 315,
											"end": 374,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 315,
											"end": 374,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 315,
											"end": 374,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 315,
											"end": 374,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 315,
											"end": 374,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 315,
											"end": 374,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 315,
											"end": 374,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 315,
											"end": 374,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 315,
											"end": 374,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 315,
											"end": 374,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 315,
											"end": 374,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 315,
											"end": 374,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 315,
											"end": 374,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 315,
											"end": 374,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 315,
											"end": 374,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 315,
											"end": 374,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 315,
											"end": 374,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 315,
											"end": 374,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 315,
											"end": 374,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 315,
											"end": 374,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 315,
											"end": 374,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 315,
											"end": 374,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 315,
											"end": 374,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 315,
											"end": 374,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 315,
											"end": 374,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 315,
											"end": 374,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 315,
											"end": 374,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 315,
											"end": 374,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 315,
											"end": 374,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 315,
											"end": 374,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 315,
											"end": 374,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 315,
											"end": 374,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 315,
											"end": 374,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 315,
											"end": 374,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 315,
											"end": 374,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 315,
											"end": 374,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 315,
											"end": 374,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 315,
											"end": 374,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 315,
											"end": 374,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 239,
											"end": 382,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 154,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 7,
											"end": 154,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 108,
											"end": 119,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 145,
											"end": 148,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 130,
											"end": 148,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 130,
											"end": 148,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 154,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7,
											"end": 154,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 154,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 154,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 154,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 160,
											"end": 274,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 160,
											"end": 274,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 160,
											"end": 274,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 160,
											"end": 274,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 280,
											"end": 678,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 280,
											"end": 678,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 439,
											"end": 442,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 460,
											"end": 543,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 541,
											"end": 542,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 536,
											"end": 539,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 460,
											"end": 543,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 460,
											"end": 543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 460,
											"end": 543,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 460,
											"end": 543,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 453,
											"end": 543,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 453,
											"end": 543,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 552,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 641,
											"end": 644,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 552,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 552,
											"end": 645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 552,
											"end": 645,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 552,
											"end": 645,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 670,
											"end": 671,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 665,
											"end": 668,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 661,
											"end": 672,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 654,
											"end": 672,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 654,
											"end": 672,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 280,
											"end": 678,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 280,
											"end": 678,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 280,
											"end": 678,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 280,
											"end": 678,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 684,
											"end": 1063,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 684,
											"end": 1063,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 868,
											"end": 871,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 890,
											"end": 1037,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 1033,
											"end": 1036,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 890,
											"end": 1037,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 890,
											"end": 1037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 890,
											"end": 1037,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 890,
											"end": 1037,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 883,
											"end": 1037,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 883,
											"end": 1037,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1054,
											"end": 1057,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1047,
											"end": 1057,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1047,
											"end": 1057,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 684,
											"end": 1063,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 684,
											"end": 1063,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 684,
											"end": 1063,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 684,
											"end": 1063,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"contracts/ALU8.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"withdraw()": "3ccfd60b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ALU8.sol\":\"Contract\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ALU8.sol\":{\"keccak256\":\"0xa564b3dc823d46bfc49046c2a6734f92226da07d041e79892bf327133b267661\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed684ee4dddb4354e51208dd7c79805b50a2a813e9f4469ed1db076be15b3229\",\"dweb:/ipfs/QmSNhD8t9sfE1g4QLnM6KtcuRLZY131UxDwFBzv4FtGaB1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3,
								"contract": "contracts/ALU8.sol:Contract",
								"label": "owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "9302",
				"formattedMessage": "Warning: Return value of low-level calls not used.\n  --> contracts/ALU8.sol:14:9:\n   |\n14 |         payable(msg.sender).call{value : address(this).balance}(\"\");\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n",
				"message": "Return value of low-level calls not used.",
				"severity": "warning",
				"sourceLocation": {
					"end": 374,
					"file": "contracts/ALU8.sol",
					"start": 315
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/ALU8.sol": {
				"ast": {
					"absolutePath": "contracts/ALU8.sol",
					"exportedSymbols": {
						"Contract": [
							47
						]
					},
					"id": 48,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Contract",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 47,
							"linearizedBaseContracts": [
								47
							],
							"name": "Contract",
							"nameLocation": "70:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 3,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "94:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 47,
									"src": "86:13:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "86:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 19,
										"nodeType": "Block",
										"src": "129:102:0",
										"statements": [
											{
												"expression": {
													"id": 9,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 6,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "140:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 7,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "148:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 8,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "152:6:0",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "148:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "140:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 10,
												"nodeType": "ExpressionStatement",
												"src": "140:18:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 15,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 12,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "177:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 13,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "181:5:0",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "177:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"hexValue": "31",
																"id": 14,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "190:7:0",
																"subdenomination": "ether",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																},
																"value": "1"
															},
															"src": "177:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420656e6f7567682065746865722073656e74",
															"id": 16,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "199:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d280afc80784682a38fab6730119fac14e7f3a3226cebf671391822a4d8e6190",
																"typeString": "literal_string \"Not enough ether sent\""
															},
															"value": "Not enough ether sent"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d280afc80784682a38fab6730119fac14e7f3a3226cebf671391822a4d8e6190",
																"typeString": "literal_string \"Not enough ether sent\""
															}
														],
														"id": 11,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "169:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 17,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "169:54:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 18,
												"nodeType": "ExpressionStatement",
												"src": "169:54:0"
											}
										]
									},
									"id": 20,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "119:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "129:0:0"
									},
									"scope": 47,
									"src": "108:123:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 45,
										"nodeType": "Block",
										"src": "265:117:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 27,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 24,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "284:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 25,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "288:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "284:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 26,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3,
																"src": "298:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "284:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 23,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "276:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 28,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "276:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 29,
												"nodeType": "ExpressionStatement",
												"src": "276:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "",
															"id": 42,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "371:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 32,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "323:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 33,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "327:6:0",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "323:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 31,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "315:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_payable_$",
																		"typeString": "type(address payable)"
																	},
																	"typeName": {
																		"id": 30,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "315:8:0",
																		"stateMutability": "payable",
																		"typeDescriptions": {}
																	}
																},
																"id": 34,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "315:19:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 35,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "335:4:0",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "315:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 41,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"expression": {
																	"arguments": [
																		{
																			"id": 38,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "356:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Contract_$47",
																				"typeString": "contract Contract"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Contract_$47",
																				"typeString": "contract Contract"
																			}
																		],
																		"id": 37,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "348:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 36,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "348:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 39,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "348:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 40,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "362:7:0",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "348:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "315:55:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 43,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "315:59:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"id": 44,
												"nodeType": "ExpressionStatement",
												"src": "315:59:0"
											}
										]
									},
									"functionSelector": "3ccfd60b",
									"id": 46,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "248:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "256:2:0"
									},
									"returnParameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "265:0:0"
									},
									"scope": 47,
									"src": "239:143:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 48,
							"src": "61:324:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:352:0"
				},
				"id": 0
			}
		}
	}
}